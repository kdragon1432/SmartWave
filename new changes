[1mdiff --git a/Main.py b/Main.py[m
[1mindex afbb193..1dc0ce3 100644[m
[1m--- a/Main.py[m
[1m+++ b/Main.py[m
[36m@@ -8,31 +8,31 @@[m [mimport os[m
 [m
 class SmartWave:[m
 [m
[31m-    translatedFoodTemp = acquireTemp()[m
[31m-    [m
[31m-    def acquireTemp():[m
[31m-        inFile = openInputFile()[m
[31m-        traslateDict = {}[m
[31m-        for line in inFile:[m
[31m-            translateDict[line[0]]=int(line[1])[m
[31m-        return traslateDict.get(GrabData())[m
[31m-[m
[31m-    def openInputFile(): #precalled[m
[31m-        while not os.path.exists(foodtemps.csv)[m
[31m-            print(F"File does not exist!")[m
[31m-        return open(foodtemps.csv, "r")[m
[31m-        [m
     [m
[32m+[m[32m###Broken###[m
[32m+[m[32m   # def openInputFile(): #precalled[m
[32m+[m[32m       # while not os.path.exists(foodtemps.csv):[m
[32m+[m[32m       #     print("File does not exist!")[m
[32m+[m[32m       # return open(foodtemps.csv, "r")[m
 [m
[31m-    def GrabData: #precalled[m
[32m+[m[32m    def GrabData(): #precalled[m
         unorganizedData = DatacquireQRData()[m
         orgData = organizeData(unorganizedData)[m
         return food[m
 [m
[31m-    def organizeData(uoData): #precalled[m
[32m+[m[32m    def organizeData(self,uoData): #precalled[m
         orgData = [][m
         sData = uoData.split(',')[m
         return sData[0][m
[32m+[m[41m    [m
[32m+[m[32m    def acquireTemp():[m
[32m+[m[32m        inFile = open('foodtemps.csv','r')[m
[32m+[m[32m        translateDict = {}[m
[32m+[m[32m        for line in inFile:[m
[32m+[m[32m            translateDict[line[0]]=line[1][m
[32m+[m[32m        return translateDict.get(self.GrabData())[m
[32m+[m[41m    [m
[32m+[m[32m    translatedFoodTemp = acquireTemp()[m
 [m
 def main():[m
 [m
